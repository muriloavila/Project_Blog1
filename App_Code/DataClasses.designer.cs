#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbBlog")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttabPost(tabPost instance);
  partial void UpdatetabPost(tabPost instance);
  partial void DeletetabPost(tabPost instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbBlogConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tabPost> tabPosts
	{
		get
		{
			return this.GetTable<tabPost>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tabPosts")]
public partial class tabPost : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _titulo;
	
	private string _autor;
	
	private string _conteudo;
	
	private int _status;
	
	private System.DateTime _data;
	
	private System.Nullable<int> _visitas;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void OnautorChanging(string value);
    partial void OnautorChanged();
    partial void OnconteudoChanging(string value);
    partial void OnconteudoChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnvisitasChanging(System.Nullable<int> value);
    partial void OnvisitasChanged();
    #endregion
	
	public tabPost()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string titulo
	{
		get
		{
			return this._titulo;
		}
		set
		{
			if ((this._titulo != value))
			{
				this.OntituloChanging(value);
				this.SendPropertyChanging();
				this._titulo = value;
				this.SendPropertyChanged("titulo");
				this.OntituloChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string autor
	{
		get
		{
			return this._autor;
		}
		set
		{
			if ((this._autor != value))
			{
				this.OnautorChanging(value);
				this.SendPropertyChanging();
				this._autor = value;
				this.SendPropertyChanged("autor");
				this.OnautorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conteudo", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string conteudo
	{
		get
		{
			return this._conteudo;
		}
		set
		{
			if ((this._conteudo != value))
			{
				this.OnconteudoChanging(value);
				this.SendPropertyChanging();
				this._conteudo = value;
				this.SendPropertyChanged("conteudo");
				this.OnconteudoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
	public int status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
	public System.DateTime data
	{
		get
		{
			return this._data;
		}
		set
		{
			if ((this._data != value))
			{
				this.OndataChanging(value);
				this.SendPropertyChanging();
				this._data = value;
				this.SendPropertyChanged("data");
				this.OndataChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visitas", DbType="Int")]
	public System.Nullable<int> visitas
	{
		get
		{
			return this._visitas;
		}
		set
		{
			if ((this._visitas != value))
			{
				this.OnvisitasChanging(value);
				this.SendPropertyChanging();
				this._visitas = value;
				this.SendPropertyChanged("visitas");
				this.OnvisitasChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
